{"ast":null,"code":"var _jsxFileName = \"/Users/jakobstrozberg/Desktop/nonamehackathon/noname-shopping-list/src/components/ProductSuggestion.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Search } from 'lucide-react';\nimport { CSVDataLoader } from '../utils/csvLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MOCK_PRODUCTS = [{\n  id: '1',\n  name: 'English Cucumber',\n  description: 'Fresh English cucumber, 1 ea',\n  image: 'https://assets.shop.loblaws.ca/products/20070132001/b2/en/front/20070132001_front_a06_@2.png'\n}, {\n  id: '2',\n  name: 'Green Onion',\n  description: 'Fresh green onion bunch',\n  image: 'https://assets.shop.loblaws.ca/products/20107500001/b2/en/front/20107500001_front_a06_@2.png'\n}, {\n  id: '3',\n  name: 'Roma Tomatoes',\n  description: 'Fresh Roma tomatoes, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20143381001/b2/en/front/20143381001_front_a06_@2.png'\n}, {\n  id: '4',\n  name: 'Broccoli',\n  description: 'Fresh broccoli crown, 1 ea',\n  image: 'https://assets.shop.loblaws.ca/products/20145621001/b2/en/front/20145621001_front_a06_@2.png'\n}, {\n  id: '5',\n  name: 'Red Peppers',\n  description: 'Fresh red bell peppers, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20007535001/b2/en/front/20007535001_front_a06_@2.png'\n}, {\n  id: '6',\n  name: 'Yellow Onions',\n  description: 'Yellow onions, 3 lb bag',\n  image: 'https://assets.shop.loblaws.ca/products/20811994001/b2/en/front/20811994001_front_a06_@2.png'\n}, {\n  id: '7',\n  name: 'Celery Stalks',\n  description: 'Fresh celery stalks, 1 ea',\n  image: 'https://assets.shop.loblaws.ca/products/20163119001/b2/en/front/20163119001_front_a06_@2.png'\n}, {\n  id: '8',\n  name: 'Lettuce Iceberg',\n  description: 'Fresh iceberg lettuce head, 1 ea',\n  image: 'https://assets.shop.loblaws.ca/products/20135326001/b2/en/front/20135326001_front_a06_@2.png'\n}, {\n  id: '9',\n  name: 'Red Onion',\n  description: 'Fresh red onions, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20134101001/b2/en/front/20134101001_front_a06_@2.png'\n}, {\n  id: '10',\n  name: 'Cauliflower',\n  description: 'Fresh cauliflower head, 1 ea',\n  image: 'https://assets.shop.loblaws.ca/products/20135377001/b2/en/front/20135377001_front_a06_@2.png'\n}, {\n  id: '11',\n  name: 'Sweet Green Peppers',\n  description: 'Fresh green bell peppers, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20425893001/b2/en/front/20425893001_front_a06_@2.png'\n}, {\n  id: '12',\n  name: 'Zucchini',\n  description: 'Fresh zucchini, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20426596001/b2/en/front/20426596001_front_a06_@2.png'\n}, {\n  id: '13',\n  name: 'Garlic Bulbs',\n  description: 'Fresh garlic bulbs, 3-count pack',\n  image: 'https://assets.shop.loblaws.ca/products/21004355001/b2/en/front/21004355001_front_a06_@2.png'\n}, {\n  id: '14',\n  name: 'Ginger',\n  description: 'Fresh ginger root, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20179038001/b2/en/front/20179038001_front_a06_@2.png'\n}, {\n  id: '15',\n  name: 'Mini Cucumbers',\n  description: 'Mini cucumbers, 15-pack',\n  image: 'https://assets.shop.loblaws.ca/products/21035960001/b2/en/front/21035960001_front_a06_@2.png'\n}, {\n  id: '16',\n  name: 'White Potatoes',\n  description: 'White potatoes, 10 lb bag',\n  image: 'https://assets.shop.loblaws.ca/products/20600997001/b2/en/front/20600997001_front_a06_@2.png'\n}, {\n  id: '17',\n  name: 'Sweet Potato',\n  description: 'Fresh sweet potatoes, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20127708001/b2/en/front/20127708001_front_a06_@2.png'\n}, {\n  id: '18',\n  name: 'Grape Tomatoes',\n  description: 'Fresh grape tomatoes, 283g container',\n  image: 'https://assets.shop.loblaws.ca/products/21367888001/b2/en/front/21367888001_front_a06_@2.png'\n}, {\n  id: '19',\n  name: 'Sweet Onion',\n  description: 'Fresh sweet onions, sold by weight',\n  image: 'https://assets.shop.loblaws.ca/products/20083454001/b2/en/front/20083454001_front_a06_@2.png'\n}, {\n  id: '20',\n  name: 'Romaine Lettuce',\n  description: 'Fresh romaine lettuce head, 1 ea',\n  image: 'https://assets.shop.loblaws.ca/products/20065036001/b2/en/front/20065036001_front_a06_@2.png'\n},\n// Add more common grocery items\n{\n  id: '21',\n  name: 'Bananas',\n  description: 'Fresh bananas, sold by weight',\n  brand: 'No Name'\n}, {\n  id: '22',\n  name: 'Milk 2%',\n  description: 'Partly skimmed milk, 4L jug',\n  brand: 'No Name'\n}, {\n  id: '23',\n  name: 'Bread White',\n  description: 'White sandwich bread, 675g loaf',\n  brand: 'No Name'\n}, {\n  id: '24',\n  name: 'Eggs Large',\n  description: 'Large white eggs, 12-count',\n  brand: 'No Name'\n}, {\n  id: '25',\n  name: 'Chicken Breast',\n  description: 'Boneless skinless chicken breast',\n  brand: 'No Name'\n}, {\n  id: '26',\n  name: 'Ground Beef',\n  description: 'Lean ground beef, sold by weight',\n  brand: 'No Name'\n}, {\n  id: '27',\n  name: 'Pasta Spaghetti',\n  description: 'Spaghetti pasta, 900g box',\n  brand: 'No Name'\n}, {\n  id: '28',\n  name: 'Rice White',\n  description: 'Long grain white rice, 2kg bag',\n  brand: 'No Name'\n}, {\n  id: '29',\n  name: 'Yogurt Greek',\n  description: 'Plain Greek yogurt, 750g container',\n  brand: 'No Name'\n}, {\n  id: '30',\n  name: 'Cheese Cheddar',\n  description: 'Medium cheddar cheese, 400g block',\n  brand: 'No Name'\n}];\nexport const ProductSuggestion = ({\n  value,\n  onChange,\n  onProductSelect,\n  placeholder = \"Enter product name...\",\n  className = \"\"\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\n  const [isLoadingData, setIsLoadingData] = useState(false);\n  const dropdownRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Load CSV data on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoadingData(true);\n      try {\n        await CSVDataLoader.loadProducts();\n      } catch (error) {\n        console.error('Failed to load product data:', error);\n      } finally {\n        setIsLoadingData(false);\n      }\n    };\n    loadData();\n  }, []);\n  useEffect(() => {\n    if (value.length >= 2) {\n      const filtered = MOCK_PRODUCTS.filter(product => product.name.toLowerCase().includes(value.toLowerCase()) || product.description.toLowerCase().includes(value.toLowerCase()) || product.brand && product.brand.toLowerCase().includes(value.toLowerCase())).slice(0, 8); // Limit to 8 suggestions\n      setFilteredProducts(filtered);\n      setIsOpen(filtered.length > 0);\n    } else {\n      setFilteredProducts([]);\n      setIsOpen(false);\n    }\n    setHighlightedIndex(-1);\n  }, [value]);\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n  const handleKeyDown = e => {\n    if (!isOpen) return;\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setHighlightedIndex(prev => prev < filteredProducts.length - 1 ? prev + 1 : prev);\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setHighlightedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedIndex >= 0) {\n          handleProductSelect(filteredProducts[highlightedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setHighlightedIndex(-1);\n        break;\n    }\n  };\n  const handleProductSelect = product => {\n    onChange(product.name);\n    onProductSelect === null || onProductSelect === void 0 ? void 0 : onProductSelect(product);\n    setIsOpen(false);\n    setHighlightedIndex(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `product-suggestion ${className}`,\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"text\",\n        value: value,\n        onChange: e => onChange(e.target.value),\n        onKeyDown: handleKeyDown,\n        placeholder: placeholder,\n        className: \"input product-input\",\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        className: \"search-icon\",\n        size: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), isOpen && filteredProducts.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-dropdown\",\n      children: filteredProducts.map((product, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `suggestion-item ${index === highlightedIndex ? 'highlighted' : ''}`,\n        onClick: () => handleProductSelect(product),\n        onMouseEnter: () => setHighlightedIndex(index),\n        children: [product.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name,\n          className: \"product-image\",\n          onError: e => {\n            e.currentTarget.style.display = 'none';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-name\",\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-description\",\n            children: product.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), product.brand && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"product-brand\",\n            children: product.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this)]\n      }, product.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductSuggestion, \"NB8NpnghVeUW4f7z4IL6FVHVGq0=\");\n_c = ProductSuggestion;\nvar _c;\n$RefreshReg$(_c, \"ProductSuggestion\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Search","CSVDataLoader","jsxDEV","_jsxDEV","MOCK_PRODUCTS","id","name","description","image","brand","ProductSuggestion","value","onChange","onProductSelect","placeholder","className","_s","isOpen","setIsOpen","filteredProducts","setFilteredProducts","highlightedIndex","setHighlightedIndex","isLoadingData","setIsLoadingData","dropdownRef","inputRef","loadData","loadProducts","error","console","length","filtered","filter","product","toLowerCase","includes","slice","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleKeyDown","e","key","preventDefault","prev","handleProductSelect","ref","children","type","onKeyDown","autoComplete","fileName","_jsxFileName","lineNumber","columnNumber","size","map","index","onClick","onMouseEnter","src","alt","onError","currentTarget","style","display","_c","$RefreshReg$"],"sources":["/Users/jakobstrozberg/Desktop/nonamehackathon/noname-shopping-list/src/components/ProductSuggestion.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Product } from '../types';\nimport { ChevronDown, Search } from 'lucide-react';\nimport { CSVDataLoader } from '../utils/csvLoader';\n\ninterface ProductSuggestionProps {\n  value: string;\n  onChange: (value: string) => void;\n  onProductSelect?: (product: Product) => void;\n  placeholder?: string;\n  className?: string;\n}\n\nconst MOCK_PRODUCTS: Product[] = [\n  { id: '1', name: 'English Cucumber', description: 'Fresh English cucumber, 1 ea', image: 'https://assets.shop.loblaws.ca/products/20070132001/b2/en/front/20070132001_front_a06_@2.png' },\n  { id: '2', name: 'Green Onion', description: 'Fresh green onion bunch', image: 'https://assets.shop.loblaws.ca/products/20107500001/b2/en/front/20107500001_front_a06_@2.png' },\n  { id: '3', name: 'Roma Tomatoes', description: 'Fresh Roma tomatoes, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20143381001/b2/en/front/20143381001_front_a06_@2.png' },\n  { id: '4', name: 'Broccoli', description: 'Fresh broccoli crown, 1 ea', image: 'https://assets.shop.loblaws.ca/products/20145621001/b2/en/front/20145621001_front_a06_@2.png' },\n  { id: '5', name: 'Red Peppers', description: 'Fresh red bell peppers, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20007535001/b2/en/front/20007535001_front_a06_@2.png' },\n  { id: '6', name: 'Yellow Onions', description: 'Yellow onions, 3 lb bag', image: 'https://assets.shop.loblaws.ca/products/20811994001/b2/en/front/20811994001_front_a06_@2.png' },\n  { id: '7', name: 'Celery Stalks', description: 'Fresh celery stalks, 1 ea', image: 'https://assets.shop.loblaws.ca/products/20163119001/b2/en/front/20163119001_front_a06_@2.png' },\n  { id: '8', name: 'Lettuce Iceberg', description: 'Fresh iceberg lettuce head, 1 ea', image: 'https://assets.shop.loblaws.ca/products/20135326001/b2/en/front/20135326001_front_a06_@2.png' },\n  { id: '9', name: 'Red Onion', description: 'Fresh red onions, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20134101001/b2/en/front/20134101001_front_a06_@2.png' },\n  { id: '10', name: 'Cauliflower', description: 'Fresh cauliflower head, 1 ea', image: 'https://assets.shop.loblaws.ca/products/20135377001/b2/en/front/20135377001_front_a06_@2.png' },\n  { id: '11', name: 'Sweet Green Peppers', description: 'Fresh green bell peppers, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20425893001/b2/en/front/20425893001_front_a06_@2.png' },\n  { id: '12', name: 'Zucchini', description: 'Fresh zucchini, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20426596001/b2/en/front/20426596001_front_a06_@2.png' },\n  { id: '13', name: 'Garlic Bulbs', description: 'Fresh garlic bulbs, 3-count pack', image: 'https://assets.shop.loblaws.ca/products/21004355001/b2/en/front/21004355001_front_a06_@2.png' },\n  { id: '14', name: 'Ginger', description: 'Fresh ginger root, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20179038001/b2/en/front/20179038001_front_a06_@2.png' },\n  { id: '15', name: 'Mini Cucumbers', description: 'Mini cucumbers, 15-pack', image: 'https://assets.shop.loblaws.ca/products/21035960001/b2/en/front/21035960001_front_a06_@2.png' },\n  { id: '16', name: 'White Potatoes', description: 'White potatoes, 10 lb bag', image: 'https://assets.shop.loblaws.ca/products/20600997001/b2/en/front/20600997001_front_a06_@2.png' },\n  { id: '17', name: 'Sweet Potato', description: 'Fresh sweet potatoes, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20127708001/b2/en/front/20127708001_front_a06_@2.png' },\n  { id: '18', name: 'Grape Tomatoes', description: 'Fresh grape tomatoes, 283g container', image: 'https://assets.shop.loblaws.ca/products/21367888001/b2/en/front/21367888001_front_a06_@2.png' },\n  { id: '19', name: 'Sweet Onion', description: 'Fresh sweet onions, sold by weight', image: 'https://assets.shop.loblaws.ca/products/20083454001/b2/en/front/20083454001_front_a06_@2.png' },\n  { id: '20', name: 'Romaine Lettuce', description: 'Fresh romaine lettuce head, 1 ea', image: 'https://assets.shop.loblaws.ca/products/20065036001/b2/en/front/20065036001_front_a06_@2.png' },\n  // Add more common grocery items\n  { id: '21', name: 'Bananas', description: 'Fresh bananas, sold by weight', brand: 'No Name' },\n  { id: '22', name: 'Milk 2%', description: 'Partly skimmed milk, 4L jug', brand: 'No Name' },\n  { id: '23', name: 'Bread White', description: 'White sandwich bread, 675g loaf', brand: 'No Name' },\n  { id: '24', name: 'Eggs Large', description: 'Large white eggs, 12-count', brand: 'No Name' },\n  { id: '25', name: 'Chicken Breast', description: 'Boneless skinless chicken breast', brand: 'No Name' },\n  { id: '26', name: 'Ground Beef', description: 'Lean ground beef, sold by weight', brand: 'No Name' },\n  { id: '27', name: 'Pasta Spaghetti', description: 'Spaghetti pasta, 900g box', brand: 'No Name' },\n  { id: '28', name: 'Rice White', description: 'Long grain white rice, 2kg bag', brand: 'No Name' },\n  { id: '29', name: 'Yogurt Greek', description: 'Plain Greek yogurt, 750g container', brand: 'No Name' },\n  { id: '30', name: 'Cheese Cheddar', description: 'Medium cheddar cheese, 400g block', brand: 'No Name' },\n];\n\nexport const ProductSuggestion: React.FC<ProductSuggestionProps> = ({\n  value,\n  onChange,\n  onProductSelect,\n  placeholder = \"Enter product name...\",\n  className = \"\"\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\n  const [isLoadingData, setIsLoadingData] = useState(false);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  // Load CSV data on component mount\n  useEffect(() => {\n    const loadData = async () => {\n      setIsLoadingData(true);\n      try {\n        await CSVDataLoader.loadProducts();\n      } catch (error) {\n        console.error('Failed to load product data:', error);\n      } finally {\n        setIsLoadingData(false);\n      }\n    };\n    \n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (value.length >= 2) {\n      const filtered = MOCK_PRODUCTS.filter(product =>\n        product.name.toLowerCase().includes(value.toLowerCase()) ||\n        product.description.toLowerCase().includes(value.toLowerCase()) ||\n        (product.brand && product.brand.toLowerCase().includes(value.toLowerCase()))\n      ).slice(0, 8); // Limit to 8 suggestions\n      setFilteredProducts(filtered);\n      setIsOpen(filtered.length > 0);\n    } else {\n      setFilteredProducts([]);\n      setIsOpen(false);\n    }\n    setHighlightedIndex(-1);\n  }, [value]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setHighlightedIndex(prev => \n          prev < filteredProducts.length - 1 ? prev + 1 : prev\n        );\n        break;\n      case 'ArrowUp':\n        e.preventDefault();\n        setHighlightedIndex(prev => prev > 0 ? prev - 1 : -1);\n        break;\n      case 'Enter':\n        e.preventDefault();\n        if (highlightedIndex >= 0) {\n          handleProductSelect(filteredProducts[highlightedIndex]);\n        }\n        break;\n      case 'Escape':\n        setIsOpen(false);\n        setHighlightedIndex(-1);\n        break;\n    }\n  };\n\n  const handleProductSelect = (product: Product) => {\n    onChange(product.name);\n    onProductSelect?.(product);\n    setIsOpen(false);\n    setHighlightedIndex(-1);\n  };\n\n  return (\n    <div className={`product-suggestion ${className}`} ref={dropdownRef}>\n      <div className=\"input-container\">\n        <input\n          ref={inputRef}\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n          onKeyDown={handleKeyDown}\n          placeholder={placeholder}\n          className=\"input product-input\"\n          autoComplete=\"off\"\n        />\n        <Search className=\"search-icon\" size={16} />\n      </div>\n\n      {isOpen && filteredProducts.length > 0 && (\n        <div className=\"suggestions-dropdown\">\n          {filteredProducts.map((product, index) => (\n            <div\n              key={product.id}\n              className={`suggestion-item ${index === highlightedIndex ? 'highlighted' : ''}`}\n              onClick={() => handleProductSelect(product)}\n              onMouseEnter={() => setHighlightedIndex(index)}\n            >\n              {product.image && (\n                <img \n                  src={product.image} \n                  alt={product.name}\n                  className=\"product-image\"\n                  onError={(e) => {\n                    e.currentTarget.style.display = 'none';\n                  }}\n                />\n              )}\n              <div className=\"product-info\">\n                <div className=\"product-name\">{product.name}</div>\n                <div className=\"product-description\">{product.description}</div>\n                {product.brand && (\n                  <div className=\"product-brand\">{product.brand}</div>\n                )}\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}